import { useRef, useState } from "react";
import { useRouter } from "next/router";
import { FormField, Header, Input, Loader } from "@/components";
import { randomPrompt } from "@/utils";
import { preview } from "@/public/assets";
import Head from "next/head";
import { useForm, FieldValues, SubmitHandler } from "react-hook-form";

const create = () => {
  const router = useRouter();
  const [imgLoading, setImgLoading] = useState<false>(false);
  const [loading, setLoading] = useState<boolean>(false);
  const {
    register,
    handleSubmit,
    watch,
    reset,
    formState: { errors },
  } = useForm<FieldValues>({
    defaultValues: {
      name: "",
      prompt: "",
      photo: "",
    },
  });

  const onSubimt: SubmitHandler<FieldValues> = (data) => {
    console.log(data);
  };

  const handleSurpriseMe = () => {};

  return (
    <>
      <Head>
        <title>Create post</title>
      </Head>

      <Header />
      <div className="px-4 py-8 sm:p-8 w-full bg-[#f9fafe] min-h-[calc(100vh-73px)]">
        <section className="w-full max-w-7xl mx-auto">
          <div>
            <h1 className="font-extrabold text-[#222328] text-3xl">Create</h1>
            <p className="mt-2 text-[#666e75] text-base max-w-lg">
              Create imaginative and visually stunning images generated by
              DALL-E AI and share then with the community.
            </p>
          </div>

          <form
            className="mt-16 max-w-3xl space-y-5"
            onSubmit={handleSubmit(onSubimt)}
          >
            <Input
              id="name"
              label="Name"
              type="text"
              disabled={loading}
              register={register}
              placeholder="John Doe"
              errors={errors}
              required
            />

            <Input
              id="prompt"
              label="Prompt"
              type="text"
              disabled={loading}
              register={register}
              placeholder="A plush toy robot sitting against a yellow wall"
              errors={errors}
              required
              isSurpriseMe
              handleSurpriseMe={handleSurpriseMe}
            />

            <div className="relative bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:boredr-blue-500 w-80 p-3 h-80 flex justify-center items-center">
              {watch("photo") ? (
                <img
                  src={watch("photo")}
                  alt={watch("prompt")}
                  className="w-full h-full object-contain"
                />
              ) : (
                <img
                  src={preview.src}
                  alt="preview"
                  className="w-9/12 h-9/12 object-contain opacity-40"
                />
              )}

              {imgLoading && (
                <div className="absolute inset-0 z-0 flex justify-center items-center opacity-50 rounded-lg">
                  <Loader />
                </div>
              )}
            </div>
          </form>
        </section>
      </div>
    </>
  );
};

export default create;
